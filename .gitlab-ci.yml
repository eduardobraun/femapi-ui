# Official docker image.
image: docker:latest

cache:
  paths:
    - node_modules

variables:
  GIT_SUBMODULE_STRATEGY: recursive

services:
  - docker:dind

# build-master:
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

#   stage: build
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#     - docker push "$CI_REGISTRY_IMAGE"
#   only:
#     - master

# build:
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
#   stage: build
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
#     - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
#   except:
#     - master

deploy_staging:
  image: node:8-jessie
  stage: deploy
  script:
    - ( apt-get update -y && apt-get install ca-certificates openssl openssh-client -y )
    - update-ca-certificates
    - eval $(ssh-agent -s)
    - echo "$STAGING_SERVICE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh

    - npm install
    - export VUE_APP_GRAPHQL_HTTP="$STAGING_API_ADDR"
    - npm run build

    - ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no "$STAGING_USER"@"$STAGING_ADDR" rm -rf /home/$STAGING_USER/www/*
    - scp -r -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ./dist/* "$STAGING_USER"@"$STAGING_ADDR":~/www
  environment:
    name: staging
    url: $STAGING_HTTP_ADDR
  only:
  - master
